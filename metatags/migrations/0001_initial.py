# -*- coding: utf-8 -*-
# Generated by Django 1.9.12 on 2017-02-15 19:31
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContentMetatag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[(b'description', b'Description'), (b'title', b'Title')], help_text=b'The name of the metatag.', max_length=100)),
                ('content', models.CharField(help_text=b'The content of the metatag.', max_length=250)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('sites', models.ManyToManyField(blank=True, help_text=b'Sites that this tag will appear on.', to='sites.Site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='URLMetatag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[(b'description', b'Description'), (b'title', b'Title')], help_text=b'The name of the metatag.', max_length=100)),
                ('content', models.CharField(help_text=b'The content of the metatag.', max_length=250)),
                ('url', models.CharField(db_index=True, default=b'^/$', help_text='Where on the site this metatag will appear. This value\nmay be a regular expression and may be very complex. A simple example\nis ^/about-us/, which means any URL starting with /about-us/ will have\nthis metatag.', max_length=100, verbose_name='URL')),
                ('sites', models.ManyToManyField(blank=True, help_text=b'Sites that this tag will appear on.', to='sites.Site')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
